# vim:ft=dockerfile
FROM ubuntu:18.04
MAINTAINER @MAINTAINER@

#
# Install required packages
#
RUN apt-get update && apt-get -y install \
 autoconf \
 automake \
 autopoint \
 build-essential \
 c2hs \
 cabal-install \
 ca-certificates \
 curl \
 ghc \
 git \
 libtool \
 llvm-6.0 \
 p7zip-full \
 pkg-config \
 python3 \
 texinfo \
 unzip \
 zlib1g-dev

# Create a new user 'androidbuilder'
COPY root-scripts/create-androidbuilder-user.sh /root/
RUN /root/create-androidbuilder-user.sh

# Log-in to the new user
USER androidbuilder
ENV HOME /home/androidbuilder

# Set the working directory
ENV BASE $HOME/ghc-build

# The adding of the patches happens later in the Docker build, just before the
# patched code is built
RUN mkdir -p $BASE/patches

COPY user-scripts/set-env.sh $BASE/

WORKDIR $BASE

#
# Start preparing the environment.
#

ENV \
 NDK_PLATFORM=@NDK_PLATFORM@ \
 NDK_TOOLCHAIN=@NDK_TOOLCHAIN@ \
 NDK_TARGET=@NDK_TARGET@ \
 NDK_ABI=@NDK_ABI@ \
 ARCH_OPTS=@ARCH_OPTS@

COPY user-scripts/install-ndk.sh \
     user-scripts/unpack-ndk.pl \
     user-scripts/create-ndk-standalone-toolchain.sh \
     user-scripts/cleanup-ndk.sh \
     $BASE/
RUN ./install-ndk.sh \
 && ./create-ndk-standalone-toolchain.sh \
 && ./cleanup-ndk.sh

#
# Build required libraries for Android.
#

COPY patches/iconv-* $BASE/patches/
COPY user-scripts/build-iconv.sh $BASE/
RUN ./build-iconv.sh

COPY user-scripts/build-ncurses.sh $BASE/
RUN ./build-ncurses.sh

COPY patches/gmp-* $BASE/patches/
COPY user-scripts/build-gmp.sh $BASE/
RUN ./build-gmp.sh

COPY user-scripts/build-nettle.sh $BASE/
RUN ./build-nettle.sh

COPY patches/gnutls-* $BASE/patches/
COPY user-scripts/build-gnutls30.sh $BASE/
RUN ./build-gnutls30.sh

COPY patches/gsasl-* $BASE/patches/
COPY user-scripts/build-gsasl.sh $BASE/
RUN ./build-gsasl.sh

COPY patches/libxml2-* $BASE/patches/
COPY user-scripts/build-libxml2.sh $BASE/
RUN ./build-libxml2.sh

COPY user-scripts/build-libidn.sh $BASE/
RUN ./build-libidn.sh

#
# At last we are ready to build GHC. First we build it for the host
# architecture and then we build the cross-compiler.
#

RUN sed -i -e 's/-8.0.1/-8.0.2/;s/-c185b8a1f3e67e43533ec590b751c2ff/-d0afb5ec441b14527a53d2445cc26ec3/' $BASE/set-env.sh
COPY user-scripts/download-ghc.sh \
     user-scripts/build-ghc-host.sh \
     $BASE/
RUN ./build-ghc-host.sh

COPY patches/ghc-* $BASE/patches/
COPY user-scripts/build-ghc-cross-compiler.sh $BASE/
RUN ./build-ghc-cross-compiler.sh

COPY user-scripts/build-hsc2hs-wrapper.sh $BASE/
RUN ./build-hsc2hs-wrapper.sh

COPY patches/cabal-wrapper $BASE/patches/
COPY user-scripts/build-cross-compile-cabal.sh $BASE/
RUN ./build-cross-compile-cabal.sh

COPY user-scripts/add-bindir-links.sh $BASE/
RUN ./add-bindir-links.sh

COPY user-scripts/update-cabal-install.sh $BASE/
RUN ./update-cabal-install.sh

COPY user-scripts/README $HOME/
RUN cat $HOME/README

WORKDIR $HOME

#
# Now to add add some PATHs
#
ENV \
 GHC_HOST=$HOME/.ghc/android-host \
 PATH=$HOME/.cabal/bin:$HOME/.ghc/$NDK_PLATFORM/$NDK_TOOLCHAIN/bin:$PATH \
 PLATFORM_PREFIX=$HOME/.ghc/$NDK_PLATFORM/$NDK_TOOLCHAIN
